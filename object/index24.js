function Dog(params) {
//    Dog это: описание/спецификация/конструктор/ класс (ОСКК)
// всегда начинается с заглавной буквы и явл существительным! НЕ ГЛАГОЛОМ
    // let this = {}
    this.myName = params;
    this.voic = function () {
        console.log('Hey, my name is' + this.myName);
    }
    // return this
}
// а это уже инстанции созданные на основе Dog (родитель Dog)
// инстанции имеют весь набор свойств/проперти своего родителя и могут в вызове изменять их
// создавать инстанцию нужно с использованием команды NEW!!!
// при создании инстанции/экземпляра класса используется функция конструктор / класс и 
// у нее невидимо/ автомматом создаются let this = {} и return this, как выше закомментировано в дифинишене
let chauChau = new Dog('laika');
let buldog = new Dog('bobik');
// создание одноразовой функции с помощью литерала {}
// такие функции не используют "конструкторв/классы" и они никак не относятся к конструктору Dog
// экземпляры таких объектов не клонируют и обычно у них есть только свойства / проперти но,
//  не бывает методов! как "voic: function"
let Dog3 = {
    myName: params,
    voic: function () {
        console.log('HEY');
    }
}